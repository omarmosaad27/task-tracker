{"version":3,"sources":["List.js","Alert.js","images/undraw_completed_tasks_vs6q.svg","App.js","reportWebVitals.js","index.js"],"names":["List","listItems","deleteItem","editItem","className","map","item","id","title","onClick","Alert","type","msg","removeAlert","list","useEffect","timeOut","setTimeout","clearTimeout","App","useState","name","setName","localStorage","getItem","JSON","parse","localStorageData","setList","editId","setEditId","isEditing","setIsEditing","show","alert","setAlert","showAlert","setItem","stringify","src","img","alt","onSubmit","e","preventDefault","newItem","Math","floor","random","placeholder","value","onChange","target","length","filter","specificItem","find","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.15a40ebc.chunk.js","sourcesContent":["import React,{useState} from 'react'\nimport { FaEdit, FaTrash } from 'react-icons/fa'\nconst List = ({listItems,deleteItem,editItem}) => {\n\n  return(\n      <div className=\"task-tracker-list\">\n        {listItems.map((item)=>{\n          const{id,title}=item\n          return(\n            <div className=\"task-tracker-item\">\n              <p className=\"title\" >{title}</p>\n              <div className=\"btn-container\">\n                <button className=\"edit\" onClick={()=>editItem(id)}>\n                  <FaEdit/>\n                </button>\n                <button className=\"delete\" onClick={()=>deleteItem(id)}>\n                  <FaTrash/>\n                </button>\n              </div>\n            </div>\n          )\n        })}\n      </div>\n  )\n}\n\nexport default List\n","import React, { useEffect } from 'react'\n\nconst Alert = ({type,msg,removeAlert,list}) => {\n  useEffect(()=>{\n    const timeOut = setTimeout(()=>{\n      removeAlert()\n    },3000)\n    return ()=> clearTimeout(timeOut)\n  },[list])\n  return <p className={`alert alert-${type}`}>{msg}</p>\n}\n\nexport default Alert\n","export default __webpack_public_path__ + \"static/media/undraw_completed_tasks_vs6q.90ea9e70.svg\";","import React, { useState, useEffect } from 'react'\nimport List from './List'\nimport Alert from './Alert'\nimport img from './images/undraw_completed_tasks_vs6q.svg'\nconst localStorageData = ()=>{\n  let list = localStorage.getItem(\"list\")\n  if(list){\n    return JSON.parse(list)\n  }else{\n    return []\n  }\n}\nfunction App() {\n  const [name,setName]=useState(\"\")\n  const [list,setList] = useState(localStorageData())\n  const [editId,setEditId] = useState(null)\n  const [isEditing,setIsEditing] = useState(false)\n  const [alert,setAlert]=useState({\n    show:false, \n    msg:\"\", \n    type:\"\" // used as classname\n  })\n  // add item  \n  const handleSubmit = (e) =>{\n    e.preventDefault()\n    if(!name){\n      // display alert\n      showAlert(true,\"danger\",\"please add task\")\n    }else if(name && isEditing){\n      setList(\n        \n          list.map((item)=>{\n            if(item.id === editId){\n              return{...item,title:name}\n            }\n            return item\n          })\n        \n      )\n      setIsEditing(false)\n      setName(\"\")\n      setEditId(null)\n      showAlert(true,\"success\",\"task changed successfuly\")\n    }else{\n      // if there is value then add it \n      showAlert(true,\"success\",\"task added successfuly\")\n      const newItem = {id:Math.floor(Math.random()*10), title:name }\n      setList([...list,newItem])\n      setName(\"\")\n      \n    }\n    \n  }\n  // delete item \n  const deleteItem = (id) =>{\n    showAlert(true,\"danger\",'task removed')\n    setList(list.filter((item)=>item.id!==id))\n  }\n  // if it done\n  \n  // edit item\n  const editItem = (id)=>{\n      const specificItem = list.find((item)=>item.id===id)\n      setIsEditing(true)\n      setEditId(id)\n      setName(specificItem.title)\n  }\n  // clear all items\n  const clearItems = ()=>{\n    showAlert(true,\"danger\",\"taskes removed\")\n    setList([])\n  }\n  // show alert function \n  const showAlert = (show=false,type=\"\",msg=\"\") => {\n    setAlert({show,type,msg})\n  }\n  // store data in local storage\n  useEffect(()=>{\n    localStorage.setItem(\"list\",JSON.stringify(list))\n  },[list])\n  return(\n      <main>\n        <header>\n          <h1 className=\"header-title\">track your tasks <br/> every day</h1>\n          <img src={img} alt=\"header-hmg\"/>\n\n        </header>\n        <div className=\"task-tracker-container\">\n        <form className=\"task-tracker-form\" onSubmit={handleSubmit}>\n          {alert.show && <Alert {...alert} removeAlert={showAlert} list={list}/>}\n          <h2>task tracker</h2>\n          <div className=\"form-control\">\n            <input type=\"text\" placeholder=\"e.g.shopping\" value={name} onChange={(e)=>setName(e.target.value)}/>\n            <button className=\"submit-btn\" type=\"submit\">{isEditing ? \"edit\":\"submit\"}</button>\n          </div>\n        </form>\n        {list.length > 0 &&(\n            <div className=\"task-tracker-list-container\">\n              <List listItems={list} deleteItem={deleteItem} editItem={editItem} />\n              <div className=\"clear-btn-container\">\n                <button className=\"clear-btn\" onClick={clearItems}>clear items</button>\n              </div>\n            </div>\n        )\n        }\n      </div>\n      </main>\n    )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}